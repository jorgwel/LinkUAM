package mx.uam.azc.link.model;
// Generated 7/06/2011 11:19:01 AM by Hibernate Tools 3.2.4.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Canica generated by hbm2java
 */
@Entity
@Table(name = "canica", uniqueConstraints =
@UniqueConstraint(columnNames = {
    "necesidad_id", "usuario_id"}))
public class Canica implements java.io.Serializable {

    private int idCanica;
    private Usuario usuario;
    private Necesidad necesidad;
    private Date fechaCanica;
    private String textoAportadoCanica;
    private Set<Aviso> avisos = new HashSet<Aviso>(0);
    private Set<Envio> envios = new HashSet<Envio>(0);

    public Canica() {
    }

    public Canica(int idCanica, Usuario usuario, Necesidad necesidad,
            Date fechaCanica) {
        this.idCanica = idCanica;
        this.usuario = usuario;
        this.necesidad = necesidad;
        this.fechaCanica = fechaCanica;
    }

    public Canica(int idCanica, Usuario usuario, Necesidad necesidad,
            Date fechaCanica, String textoAportadoCanica) {
        this.idCanica = idCanica;
        this.usuario = usuario;
        this.necesidad = necesidad;
        this.fechaCanica = fechaCanica;
        this.textoAportadoCanica = textoAportadoCanica;
    }

    public Canica(Usuario usuario, Necesidad necesidad
            , java.sql.Date fechaCanica, String textoAportadoCanica) {
        this.usuario = usuario;
        this.necesidad = necesidad;
        this.fechaCanica = fechaCanica;
        this.textoAportadoCanica = textoAportadoCanica;
    }

    public Canica(int idCanica, Usuario usuario, Necesidad necesidad,
            Date fechaCanica, String textoAportadoCanica, Set<Envio> envios) {
        this.idCanica = idCanica;
        this.usuario = usuario;
        this.necesidad = necesidad;
        this.fechaCanica = fechaCanica;
        this.textoAportadoCanica = textoAportadoCanica;
        this.envios = envios;
    }

    public Canica(int idCanica, Usuario usuario, Necesidad necesidad,
            Date fechaCanica, String textoAportadoCanica, Set<Aviso> avisos,
            Set<Envio> envios) {
        this.idCanica = idCanica;
        this.usuario = usuario;
        this.necesidad = necesidad;
        this.fechaCanica = fechaCanica;
        this.textoAportadoCanica = textoAportadoCanica;
        this.avisos = avisos;
        this.envios = envios;
    }

    @Id
    @Column(name = "id_canica", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.SEQUENCE)
    public int getIdCanica() {
        return this.idCanica;
    }

    public void setIdCanica(int idCanica) {
        this.idCanica = idCanica;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "usuario_id", nullable = false)
    @NotNull
    public Usuario getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "necesidad_id", nullable = false)
    @NotNull
    public Necesidad getNecesidad() {
        return this.necesidad;
    }

    public void setNecesidad(Necesidad necesidad) {
        this.necesidad = necesidad;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_canica", nullable = false, length = 13)
    @NotNull
    public Date getFechaCanica() {
        return this.fechaCanica;
    }

    public void setFechaCanica(Date fechaCanica) {
        this.fechaCanica = fechaCanica;
    }

    @Column(name = "texto_aportado_canica", length = 200)
    @Length(max = 200)
    public String getTextoAportadoCanica() {
        return this.textoAportadoCanica;
    }

    public void setTextoAportadoCanica(String textoAportadoCanica) {
        this.textoAportadoCanica = textoAportadoCanica;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "canica")
    public Set<Aviso> getAvisos() {
        return this.avisos;
    }

    public void setAvisos(Set<Aviso> avisos) {
        this.avisos = avisos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "canica")
    public Set<Envio> getEnvios() {
        return this.envios;
    }

    public void setEnvios(Set<Envio> envios) {
        this.envios = envios;
    }
}
