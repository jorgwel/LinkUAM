package mx.uam.azc.link.model;
// Generated 22/06/2011 08:54:16 PM by Hibernate Tools 3.2.4.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Invitacion generated by hbm2java
 */
@Entity
@Table(name = "invitacion")
public class Invitacion implements java.io.Serializable {

	private int idInvitacion;
	private Usuario usuarioByUsuarioInvitanteId;
	private TicketRegistro ticketRegistro;
	private EstatusInvitacion estatusInvitacion;
	private Usuario usuarioByUsuarioInvitadoId;
	private String correoUsuarioInvitacion;
	private Date fechaRegistroInvitacion;
	private Date fechaUsuarioRegistradoInvitacion;
	private String textoInvitacion;
	private Set<Envio> envios = new HashSet<Envio>(0);

	public Invitacion() {
	}

	public Invitacion(int idInvitacion, TicketRegistro ticketRegistro,
			EstatusInvitacion estatusInvitacion,
			String correoUsuarioInvitacion, Date fechaRegistroInvitacion,
			String textoInvitacion) {
		this.idInvitacion = idInvitacion;
		this.ticketRegistro = ticketRegistro;
		this.estatusInvitacion = estatusInvitacion;
		this.correoUsuarioInvitacion = correoUsuarioInvitacion;
		this.fechaRegistroInvitacion = fechaRegistroInvitacion;
		this.textoInvitacion = textoInvitacion;
	}
	public Invitacion(int idInvitacion, Usuario usuarioByUsuarioInvitanteId,
			TicketRegistro ticketRegistro, EstatusInvitacion estatusInvitacion,
			Usuario usuarioByUsuarioInvitadoId, String correoUsuarioInvitacion,
			Date fechaRegistroInvitacion,
			Date fechaUsuarioRegistradoInvitacion, String textoInvitacion,
			Set<Envio> envios) {
		this.idInvitacion = idInvitacion;
		this.usuarioByUsuarioInvitanteId = usuarioByUsuarioInvitanteId;
		this.ticketRegistro = ticketRegistro;
		this.estatusInvitacion = estatusInvitacion;
		this.usuarioByUsuarioInvitadoId = usuarioByUsuarioInvitadoId;
		this.correoUsuarioInvitacion = correoUsuarioInvitacion;
		this.fechaRegistroInvitacion = fechaRegistroInvitacion;
		this.fechaUsuarioRegistradoInvitacion = fechaUsuarioRegistradoInvitacion;
		this.textoInvitacion = textoInvitacion;
		this.envios = envios;
	}

	@Id
	@Column(name = "id_invitacion", unique = true, nullable = false)
        @GeneratedValue(strategy=GenerationType.SEQUENCE)
	public int getIdInvitacion() {
		return this.idInvitacion;
	}

	public void setIdInvitacion(int idInvitacion) {
		this.idInvitacion = idInvitacion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "usuario_invitante_id")
	public Usuario getUsuarioByUsuarioInvitanteId() {
		return this.usuarioByUsuarioInvitanteId;
	}

	public void setUsuarioByUsuarioInvitanteId(
			Usuario usuarioByUsuarioInvitanteId) {
		this.usuarioByUsuarioInvitanteId = usuarioByUsuarioInvitanteId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ticket_registro_id", nullable = false)
	@NotNull
	public TicketRegistro getTicketRegistro() {
		return this.ticketRegistro;
	}

	public void setTicketRegistro(TicketRegistro ticketRegistro) {
		this.ticketRegistro = ticketRegistro;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "estatus_invitacion_id", nullable = false)
	@NotNull
	public EstatusInvitacion getEstatusInvitacion() {
		return this.estatusInvitacion;
	}

	public void setEstatusInvitacion(EstatusInvitacion estatusInvitacion) {
		this.estatusInvitacion = estatusInvitacion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "usuario_invitado_id")
	public Usuario getUsuarioByUsuarioInvitadoId() {
		return this.usuarioByUsuarioInvitadoId;
	}

	public void setUsuarioByUsuarioInvitadoId(Usuario usuarioByUsuarioInvitadoId) {
		this.usuarioByUsuarioInvitadoId = usuarioByUsuarioInvitadoId;
	}

	@Column(name = "correo_usuario_invitacion", nullable = false, length = 100)
	@NotNull
	@Length(max = 100)
	public String getCorreoUsuarioInvitacion() {
		return this.correoUsuarioInvitacion;
	}

	public void setCorreoUsuarioInvitacion(String correoUsuarioInvitacion) {
		this.correoUsuarioInvitacion = correoUsuarioInvitacion;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha_registro_invitacion", nullable = false, length = 13)
	@NotNull
	public Date getFechaRegistroInvitacion() {
		return this.fechaRegistroInvitacion;
	}

	public void setFechaRegistroInvitacion(Date fechaRegistroInvitacion) {
		this.fechaRegistroInvitacion = fechaRegistroInvitacion;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha_usuario_registrado_invitacion", length = 13)
	public Date getFechaUsuarioRegistradoInvitacion() {
		return this.fechaUsuarioRegistradoInvitacion;
	}

	public void setFechaUsuarioRegistradoInvitacion(
			Date fechaUsuarioRegistradoInvitacion) {
		this.fechaUsuarioRegistradoInvitacion = fechaUsuarioRegistradoInvitacion;
	}

	@Column(name = "texto_invitacion", nullable = false, length = 150)
	@NotNull
	@Length(max = 150)
	public String getTextoInvitacion() {
		return this.textoInvitacion;
	}

	public void setTextoInvitacion(String textoInvitacion) {
		this.textoInvitacion = textoInvitacion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "invitacion")
	public Set<Envio> getEnvios() {
		return this.envios;
	}

	public void setEnvios(Set<Envio> envios) {
		this.envios = envios;
	}

}
