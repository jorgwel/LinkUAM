package mx.uam.azc.link.model;
// Generated 8/04/2011 07:14:19 PM by Hibernate Tools 3.2.4.GA

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Critica generated by hbm2java
 */
@Entity
@Table(name = "critica")
public class Critica implements java.io.Serializable {

    private int idCritica;
    private Usuario usuario;
    private TipoCritica tipoCritica;
    private EstatusCritica estatusCritica;
    private String textoCritica;
    private Date fechaCritica;

    public Critica() {
    }

    public Critica(int idCritica, TipoCritica tipoCritica,
            EstatusCritica estatusCritica, Date fechaCritica) {
        this.idCritica = idCritica;
        this.tipoCritica = tipoCritica;
        this.estatusCritica = estatusCritica;
        this.fechaCritica = fechaCritica;
    }

    public Critica(int idCritica, Usuario usuario, TipoCritica tipoCritica,
            EstatusCritica estatusCritica, String textoCritica,
            Date fechaCritica) {
        this.idCritica = idCritica;
        this.usuario = usuario;
        this.tipoCritica = tipoCritica;
        this.estatusCritica = estatusCritica;
        this.textoCritica = textoCritica;
        this.fechaCritica = fechaCritica;
    }

    @Id
    @Column(name = "id_critica", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.SEQUENCE)
    public int getIdCritica() {
        return this.idCritica;
    }

    public void setIdCritica(int idCritica) {
        this.idCritica = idCritica;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "usuario_id")
    public Usuario getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "tipo_critica_id", nullable = false)
    @NotNull
    public TipoCritica getTipoCritica() {
        return this.tipoCritica;
    }

    public void setTipoCritica(TipoCritica tipoCritica) {
        this.tipoCritica = tipoCritica;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "estatus_critica_id", nullable = false)
    @NotNull
    public EstatusCritica getEstatusCritica() {
        return this.estatusCritica;
    }

    public void setEstatusCritica(EstatusCritica estatusCritica) {
        this.estatusCritica = estatusCritica;
    }

    @Column(name = "texto_critica", length = 400)
    @Length(max = 400)
    public String getTextoCritica() {
        return this.textoCritica;
    }

    public void setTextoCritica(String textoCritica) {
        this.textoCritica = textoCritica;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_critica", nullable = false, length = 13)
    @NotNull
    public Date getFechaCritica() {
        return this.fechaCritica;
    }

    public void setFechaCritica(Date fechaCritica) {
        this.fechaCritica = fechaCritica;
    }
}
