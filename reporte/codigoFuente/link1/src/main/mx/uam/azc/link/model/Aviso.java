package mx.uam.azc.link.model;
// Generated 11/06/2011 09:16:22 PM by Hibernate Tools 3.2.4.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Aviso generated by hbm2java
 */
@Entity
@Table(name = "aviso")
public class Aviso implements java.io.Serializable {

	private int idAviso;
	private Bitacora bitacora;
	private Pregunta pregunta;
	private TicketRegistro ticketRegistro;
	private ReporteAbuso reporteAbuso;
	private Idea idea;
	private EstatusAviso estatusAviso;
	private Usuario usuario;
	private Canica canica;
	private Envio envio;
	private TipoAviso tipoAviso;
	private String textoAviso;
	private Date fechaCreacionAviso;
	private Set<Envio> envios = new HashSet<Envio>(0);

	public Aviso() {
	}

	public Aviso(int idAviso, EstatusAviso estatusAviso, TipoAviso tipoAviso,
			String textoAviso, Date fechaCreacionAviso) {
		this.idAviso = idAviso;
		this.estatusAviso = estatusAviso;
		this.tipoAviso = tipoAviso;
		this.textoAviso = textoAviso;
		this.fechaCreacionAviso = fechaCreacionAviso;
	}
	public Aviso(int idAviso, Bitacora bitacora, Pregunta pregunta,
			TicketRegistro ticketRegistro, ReporteAbuso reporteAbuso,
			Idea idea, EstatusAviso estatusAviso, Usuario usuario,
			Canica canica, Envio envio, TipoAviso tipoAviso, String textoAviso,
			Date fechaCreacionAviso, Set<Envio> envios) {
		this.idAviso = idAviso;
		this.bitacora = bitacora;
		this.pregunta = pregunta;
		this.ticketRegistro = ticketRegistro;
		this.reporteAbuso = reporteAbuso;
		this.idea = idea;
		this.estatusAviso = estatusAviso;
		this.usuario = usuario;
		this.canica = canica;
		this.envio = envio;
		this.tipoAviso = tipoAviso;
		this.textoAviso = textoAviso;
		this.fechaCreacionAviso = fechaCreacionAviso;
		this.envios = envios;
	}

	@Id
	@Column(name = "id_aviso", unique = true, nullable = false)
        @GeneratedValue(strategy=GenerationType.SEQUENCE)
	public int getIdAviso() {
		return this.idAviso;
	}

	public void setIdAviso(int idAviso) {
		this.idAviso = idAviso;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "bitacora_id")
	public Bitacora getBitacora() {
		return this.bitacora;
	}

	public void setBitacora(Bitacora bitacora) {
		this.bitacora = bitacora;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "pregunta_id")
	public Pregunta getPregunta() {
		return this.pregunta;
	}

	public void setPregunta(Pregunta pregunta) {
		this.pregunta = pregunta;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ticket_registro_id")
	public TicketRegistro getTicketRegistro() {
		return this.ticketRegistro;
	}

	public void setTicketRegistro(TicketRegistro ticketRegistro) {
		this.ticketRegistro = ticketRegistro;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "reporte_abuso_id")
	public ReporteAbuso getReporteAbuso() {
		return this.reporteAbuso;
	}

	public void setReporteAbuso(ReporteAbuso reporteAbuso) {
		this.reporteAbuso = reporteAbuso;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idea_id")
	public Idea getIdea() {
		return this.idea;
	}

	public void setIdea(Idea idea) {
		this.idea = idea;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "estatus_aviso_id", nullable = false)
	@NotNull
	public EstatusAviso getEstatusAviso() {
		return this.estatusAviso;
	}

	public void setEstatusAviso(EstatusAviso estatusAviso) {
		this.estatusAviso = estatusAviso;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "usuario_id")
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "canica_id")
	public Canica getCanica() {
		return this.canica;
	}

	public void setCanica(Canica canica) {
		this.canica = canica;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "envio_id")
	public Envio getEnvio() {
		return this.envio;
	}

	public void setEnvio(Envio envio) {
		this.envio = envio;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "tipo_aviso_id", nullable = false)
	@NotNull
	public TipoAviso getTipoAviso() {
		return this.tipoAviso;
	}

	public void setTipoAviso(TipoAviso tipoAviso) {
		this.tipoAviso = tipoAviso;
	}

	@Column(name = "texto_aviso", nullable = false, length = 140)
	@NotNull
	@Length(max = 140)
	public String getTextoAviso() {
		return this.textoAviso;
	}

	public void setTextoAviso(String textoAviso) {
		this.textoAviso = textoAviso;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha_creacion_aviso", nullable = false, length = 13)
	@NotNull
	public Date getFechaCreacionAviso() {
		return this.fechaCreacionAviso;
	}

	public void setFechaCreacionAviso(Date fechaCreacionAviso) {
		this.fechaCreacionAviso = fechaCreacionAviso;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "aviso")
	public Set<Envio> getEnvios() {
		return this.envios;
	}

	public void setEnvios(Set<Envio> envios) {
		this.envios = envios;
	}

}
