package mx.uam.azc.link.model;
// Generated 7/06/2011 11:19:01 AM by Hibernate Tools 3.2.4.GA

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.validator.NotNull;

/**
 * Integrante generated by hbm2java
 */
@Entity
@Table(name = "integrante")
public class Integrante implements java.io.Serializable {

    private IntegranteId id;
    private Idea idea;
    private EstatusIntegrante estatusIntegrante;
    private Usuario usuario;
    private Date fechaInicioIntegrante;
    private Date fechaFinIntegrante;
    private boolean esliderIntegrante;
    private Double calificacionIntegrante;

    public Integrante() {
    }

    public Integrante(IntegranteId id, Idea idea,
            EstatusIntegrante estatusIntegrante, Usuario usuario,
            Date fechaInicioIntegrante, boolean esliderIntegrante) {
        this.id = id;
        this.idea = idea;
        this.estatusIntegrante = estatusIntegrante;
        this.usuario = usuario;
        this.fechaInicioIntegrante = fechaInicioIntegrante;
        this.esliderIntegrante = esliderIntegrante;
    }

    public Integrante(IntegranteId id, Idea idea,
            EstatusIntegrante estatusIntegrante, Usuario usuario,
            Date fechaInicioIntegrante, Date fechaFinIntegrante,
            boolean esliderIntegrante, Double calificacionIntegrante) {
        this.id = id;
        this.idea = idea;
        this.estatusIntegrante = estatusIntegrante;
        this.usuario = usuario;
        this.fechaInicioIntegrante = fechaInicioIntegrante;
        this.fechaFinIntegrante = fechaFinIntegrante;
        this.esliderIntegrante = esliderIntegrante;
        this.calificacionIntegrante = calificacionIntegrante;
    }

    public Integrante(EstatusIntegrante estatusIntegrante, Idea idea
            , Usuario usuario, java.sql.Date fechaInicioIntegrante
            , Boolean esliderIntegrante, Double calificacionIntegrante) {
        this.id = new IntegranteId(usuario.getIdUsuario(), idea.getIdIdea());
        this.idea = idea;
        this.estatusIntegrante = estatusIntegrante;
        this.usuario = usuario;
        this.fechaInicioIntegrante = fechaInicioIntegrante;
        this.esliderIntegrante = esliderIntegrante;
        this.calificacionIntegrante = calificacionIntegrante;
    }

    public Integrante(
            IntegranteId idNuevoParticipante
            , EstatusIntegrante estatusIntegrante, Idea idea
            , Usuario usuarioActual, java.sql.Date fechaHoy, boolean esLider
            , double calificacion) {
        this.id = idNuevoParticipante;
        this.estatusIntegrante = estatusIntegrante;
        this.idea = idea;
        this.usuario = usuarioActual;
        this.fechaInicioIntegrante = fechaHoy;
        this.esliderIntegrante = esLider;
        this.calificacionIntegrante = calificacion;
    }

    @EmbeddedId
    @AttributeOverrides({
        @AttributeOverride(name = "usuarioId", column =
        @Column(name = "usuario_id", nullable = false)),
        @AttributeOverride(name = "ideaId", column =
        @Column(name = "idea_id", nullable = false))})
    @NotNull
    public IntegranteId getId() {
        return this.id;
    }

    public void setId(IntegranteId id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idea_id", nullable = false, insertable = false, updatable = false)
    @NotNull
    public Idea getIdea() {
        return this.idea;
    }

    public void setIdea(Idea idea) {
        this.idea = idea;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "estatus_integrante_id", nullable = false)
    @NotNull
    public EstatusIntegrante getEstatusIntegrante() {
        return this.estatusIntegrante;
    }

    public void setEstatusIntegrante(EstatusIntegrante estatusIntegrante) {
        this.estatusIntegrante = estatusIntegrante;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "usuario_id", nullable = false, insertable = false, updatable = false)
    @NotNull
    public Usuario getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_inicio_integrante", nullable = false, length = 13)
    @NotNull
    public Date getFechaInicioIntegrante() {
        return this.fechaInicioIntegrante;
    }

    public void setFechaInicioIntegrante(Date fechaInicioIntegrante) {
        this.fechaInicioIntegrante = fechaInicioIntegrante;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_fin_integrante", length = 13)
    public Date getFechaFinIntegrante() {
        return this.fechaFinIntegrante;
    }

    public void setFechaFinIntegrante(Date fechaFinIntegrante) {
        this.fechaFinIntegrante = fechaFinIntegrante;
    }

    @Column(name = "eslider_integrante", nullable = false)
    public boolean isEsliderIntegrante() {
        return this.esliderIntegrante;
    }

    public void setEsliderIntegrante(boolean esliderIntegrante) {
        this.esliderIntegrante = esliderIntegrante;
    }

    @Column(name = "calificacion_integrante", precision = 17, scale = 17)
    public Double getCalificacionIntegrante() {
        return this.calificacionIntegrante;
    }

    public void setCalificacionIntegrante(Double calificacionIntegrante) {
        this.calificacionIntegrante = calificacionIntegrante;
    }
}
